## begin license ##
# 
# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
# a web-control panel.
# "Meresco Harvester" is originally called "Sahara" and was developed for 
# SURFnet by:
# Seek You Too B.V. (CQ2) http://www.cq2.nl 
# 
# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
# Copyright (C) 2011-2012 Stichting Kennisnet http://www.kennisnet.nl
# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
# 
# This file is part of "Meresco Harvester"
# 
# "Meresco Harvester" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# "Meresco Harvester" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with "Meresco Harvester"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 
## end license ##

def main(arguments, **kwargs):
    domainId = arguments.get('domainId', [None])[0]
    repositoryId = arguments.get('repositoryId', [None])[0]

    orginalArgs = dict(domainId=domainId, repositoryId=repositoryId)

    yield """<div>
    <h3>Repository %s</h3>""" % repositoryId

    yield '<table class="event">'
    yield '<tr><td class="eventheader">Invalid records</td><td>&nbsp;</td></tr>'
    for id in observable.call.invalidRecords(domainId, repositoryId):
    
        recordId = id.split(":", 1)[-1]
        args = {'recordId': recordId}
        args.update(orginalArgs)
        
        invalidRecord = observable.call.getInvalidRecord(domainId, repositoryId, recordId)
        diagnosticsDetails = xpath(invalidRecord, '//diag:diagnostic/diag:details/text()')
        
        yield '<tr><td class="link"><a href="/page/invalidRecord/?%s">%s</a></td><td>%s</td></tr>' % (escapeHtml(urlencode(args)), escapeHtml(recordId), escapeHtml(diagnosticsDetails[0] if diagnosticsDetails else "No error message."))
    yield """</table>
    <p><a href="/page/showHarvesterStatus/show?%s">Back to harvester status of this repository</a></p>
    </div>""" % (escapeHtml(urlencode(orginalArgs)))

def xpath(node, path):
    return node.xpath(path, namespaces={'diag':'http://www.loc.gov/zing/srw/diagnostic/'})

