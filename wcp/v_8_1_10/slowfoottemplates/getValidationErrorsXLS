<%
from meresco.harvester.repositorystatus import RepositoryStatus
from openpyxl.writer.excel import save_virtual_workbook
from openpyxl import Workbook
from openpyxl.compat import range
from os.path import join, isfile, isdir
import os
import tempfile
import zipfile
from mod_python import apache

domainId = args.domainId
repositoryId = args.repositoryId

loggedIn = True

stateDir = req.get_options()['stateDir']
logDir = req.get_options()['logDir']

repostatus = RepositoryStatus(logDir, stateDir)
invalidrecordIds = repostatus.invalidRecords(domainId, repositoryId)

repo_xml = asxml(url('/xml/%s.%s.repository' % (domainId, repositoryId))).repository

wb = Workbook()
ws = wb.worksheets[0]
ws.title = '%s Invald OAI-PMH records' % repositoryId

max_col = 0
for idx, recId in enumerate(invalidrecordIds):
  recordId = recId.split(":", 1)[-1]
  if len(recordId) > max_col: max_col = len(recordId)
  etree = repostatus.getInvalidRecord(domainId, str(repositoryId), str(recordId))
  juicydetail = etree.xpath('//diag:diagnostic/diag:details/text()', namespaces={'diag':'http://www.loc.gov/zing/srw/diagnostic/'})
  basisurl = "%(baseurl)s?verb=GetRecord&identifier=%(oai_id)s&metadataPrefix=%(mdpf)s" % {'baseurl': repo_xml.baseurl, 'oai_id': recordId, 'mdpf': repo_xml.metadataPrefix}
  firstcell = ws.cell(column=1, row=(idx+1), value=recordId)
  firstcell.hyperlink = "%(baseurl)s?verb=GetRecord&identifier=%(oai_id)s&metadataPrefix=%(mdpf)s" % {'baseurl': repo_xml.baseurl, 'oai_id': recordId, 'mdpf': repo_xml.metadataPrefix}
  ws.cell(column=2, row=(idx+1), value=juicydetail[0])
#
ws.column_dimensions['A'].width = max_col

temp_dir = tempfile.mkdtemp()
xlsPath = join(temp_dir, "%s.xlsx" % repositoryId)
zipPath = join(temp_dir, "%s.zip" % repositoryId)

wb.save(xlsPath)

zf = zipfile.ZipFile(zipPath, mode='w')
try:
  zf.write(xlsPath, "%s.xlsx" % repositoryId)
finally:
  zf.close()

fIn = open(zipPath, 'rb')

type('application/octet-stream')
req.headers_out['Content-Disposition'] = 'attachment;filename="%s.zip"' % repositoryId

req.write(fIn.read())
fIn.close()
os.removedirs(temp_dir)


#xlsPath = join('/var/lib/python-meresco-harvester/fileupload', "%s.xlsx" % repositoryId)
#wb.save(xlsPath)

#zf = zipfile.ZipFile('/var/lib/python-meresco-harvester/fileupload/tempzip_%s.zip' % repositoryId, mode='w')
#try:
#  zf.write(xlsPath, os.path.basename(xlsPath))
#finally:
#  zf.close()

#fIn = open('/var/lib/python-meresco-harvester/fileupload/tempzip_%s.zip' % repositoryId, 'rb')
#req.write(fIn.read())
#fIn.close()
##req.write(save_virtual_workbook(wb))
%>
